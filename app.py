# streamlit_app.py
import streamlit as st
import numpy as np
import joblib  # Do zapisu i ładowania modelu

# Sprawdzanie kodu dostępu
st.set_page_config(page_title="Screening Tool for Sexual Offenses Against Children (STSAC)", layout="centered")
st.image("logo2.png")
st.caption("Wojciech Oronowicz-Jaśkowiak, PhD")

st.write("This application serves as a screening tool to prioritize diagnoses for forensic sexological evaluations. The results generated by the application do not replace a clinical diagnosis and should only be used as a preliminary step to guide further professional assessments.")

# Weryfikacja kodu dostępu
access_code = st.text_input("Please enter access code:")
if access_code != "AIME":
    st.error("Incorrect access code entered.")
    st.stop()

# Opcje menu na pasku nawigacyjnym
menu = st.sidebar.radio(
    "Wybierz stronę:",
    ["STSAC", "Model", "Research"]
)

if menu == "Model":
    st.write("""
    #### Abstract
    Paraphilic disorders are defined as a stable pattern of sexual arousal that deviates from normative sexual stimuli. One of the most frequently observed paraphilic disorders in forensic sexology is pedophilic disorder. The diagnosis of this disorder is crucial, as it can determine the type of imprisonment and necessitate participation in sexological therapy. The queue for forensic sexological evaluations is often lengthy, highlighting the importance of prioritizing the assessment of individuals who may present a higher risk to potential victims. The objective of this study was to develop a screening tool to prioritize the diagnoses for forensic sexological evaluations. The study utilized an original dataset comprising data from cognitive and psychological research conducted as part of the Diamond Grant (DI 16/003046). A dataset comprising 225 male inmates from several Polish correctional facilities was used. The study compared two clinical groups of offenders — those diagnosed with and those without sexual preference disorders. In the course of the conducted research, standard algorithms were utilized, including logistic regression, decision trees, naive Bayes, and neural networks. The best results were achieved using decision trees, with an overall classification accuracy of 90\% and an F1-Score of 0.9. A web application was developed in the Streamlit environment and made available in the scientific project’s repository (DOI: 10.17605/OSF.IO/UF9ST). The developed tool is not intended for independent diagnosis but can serve as a supportive resource for clinicians, aiding in the prioritization of evaluations and contributing to more informed decision-making processes. 
    #### Contact
    If you have any questions, please contact us at the following address: `oronowiczjaskowiak@pjwstk.edu.pl`
    """)
    st.markdown("""
    #### Model
    - **Maximum Depth:** 4 (to ensure interpretability and prevent overfitting).
    - **Random State:** 42 (for reproducibility). """)

    # Render the table
    st.markdown("""
    | Class                     | Precision | Recall | F1-Score | Support |
    |---------------------------|-----------|--------|----------|---------|
    | With paraphilic disorder  | 0.93      | 0.87   | 0.90     | 15      |
    | Without paraphilic disorder | 0.88    | 0.93   | 0.90     | 15      |
    | **Accuracy**              |           |        | **0.90** | (30 samples) |
    | **Macro Avg**             | 0.90      | 0.90   | 0.90     | 30      |
    | **Weighted Avg**          | 0.90      | 0.90   | 0.90     | 30      |
    """)
    st.caption("Table: Classification Report for the Decision Tree Model.")
    st.image("2.png")
    st.caption("The feature indices correspond to the numbers in the original dataset, which is available at DOI: 10.17605/OSF.IO/UF9ST.")


# Strona: Informacje o seksuologii
elif menu == "Research":
    st.write("""
    ### The research underlying the development of Application was the largest study of perpetrators of sexual freedom offenses conducted in Poland.
    The study was conducted across 13 Polish correctional facilities, involving a total of 375 participants. The research utilized nine distinct assessment tools to gather comprehensive data, ensuring a robust and multifaceted analysis of the subjects under investigation.
    The objective was to identify which selected psychological characteristics significantly differentiate individuals exhibiting paraphilic disorders from those exhibiting paraphilia.
    """)
    st.write("Related publications")
    st.caption("Oronowicz-Jaśkowiak, W. (2022). Porównanie wybranych charakterystyk osobowościowych, psychospołecznych, poznawczych oraz ryzyka powrotności do przestępstwa różnicujących parafilicznych od nieparafilicznych sprawców przestępstw przeciwko wolności seksualnej. Praca doktorska obroniona w Instytucie Psychiatrii i Neurologii w Warszawie.")
    st.caption("Oronowicz-Jaśkowiak, W., Lew-Starowicz, M. (2021). Polish adaptation of emotional Stroop test in assessment of pedophilia – a pilot study. Psychiatria Polska, 55(1), 85-100. Wersja przetłumaczona na język polski: Polska adaptacja zadania Stroopa w warunku emocjonalnym do oceny preferencji pedofilnych.")
    st.caption("Oronowicz-Jaśkowiak, W., Lew-Starowicz, M. (2019). Modified Stroop test in psychologic diagnosis of pedophilia. A systematic review. Postępy Psychiatrii i Neurologii, 28(1), 42-53. Wersja przetłumaczona na język polski: Zmodyfikowane zadanie Stroopa w diagnozie psychologicznej pedofilnych preferencji seksualnych. Systematyczny przegląd literatury. DOI: 10.5114/ppn.2019.84355.")
    st.caption("Oronowicz-Jaśkowiak, W., Gorajski, T. (2018). Diagnoza zaburzeń preferencji seksualnych oraz szacowanie ryzyka powrotności do przestępstwa w opiniowaniu sprawców przestępstw przeciw wolności seksualnej przez polskich psychologów-seksuologów. Przegląd Seksuologiczny, 1(53), 27-34.")
    st.write("The research project was funded by public science funds between 2017 and 2021 - the “Diamond Grant” program (DI 16/003046) of the Ministry of Science and Higher Education.")
    st.image("logo.png")
    
else:
    
    # Ładowanie modelu i nazw cech
    model = joblib.load('decision_tree_model.pkl')
    selected_features = joblib.load('selected_features.pkl')

    # Lista pól wprowadzania danych
    user_input = []
    
    st.warning("The use of this tool requires prior preliminary assessments conducted by a psychologist, psychiatrist, and sexologist. It is essential to perform interviews and psychiatric evaluations to screen for psychotic disorders and addictions. Additionally, an analysis of documentation using the STATIC-99R tool is mandatory. A psychological assessment must also be conducted, utilizing cognitive tools and the NEO-PI-R inventory.")

    # Pierwsza cecha - wykształcenie (wybór z listy)
    education = st.selectbox(
        "Education:",
        options=[1, 2, 3, 4, 5],
        format_func=lambda x: {
            1: "No education",
            2: "Primary education",
            3: "Vocational education",
            4: "Secondary education",
            5: "Higher education"
        }.get(x, "Unknown")
    )
    user_input.append(education)
    st.caption("Please provide the educational level of the person being evaluated")

    # Druga cecha - psychozy
    psychozy = st.selectbox(
        "Psychotic disorders:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(psychozy)
    st.caption("Please provide information on whether the diagnosed person has a history of psychotic disorders")
    st.info("This information must come from official clinical documentation and include a psychiatric diagnosis.")

    # Trzecia cecha - alkohol
    alkohol = st.selectbox(
        "Alcohol addiction:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(alkohol)
    st.caption("Please provide information on whether the diagnosed person has a history of alcohol addiction")
    st.info("This information must come from official clinical documentation and include a psychiatric diagnosis.")

    # Czwarta cecha - zaburzenia osobowości
    zaburzenia_osobowosci = st.selectbox(
        "Personality disorders:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(zaburzenia_osobowosci)
    st.caption("Please provide information on whether the diagnosed person has been previously diagnosed with at least one personality disorder.")
    st.info("This information must come from official clinical documentation and include a psychiatric diagnosis.")

    # Piąta cecha - liczba ofiar
    liczba_ofiar = st.slider(
        "Number of victims:",
        min_value=1,
        max_value=6,
        value=1
    )
    user_input.append(liczba_ofiar)
    st.caption("Please provide information on the total number of victims (currently and in the past combined). If the total exceeds 6, select the option 6.")

    # Szósta cecha - małoletni
    maloletni = st.selectbox(
        "At least one minor victim:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(maloletni)
    st.caption("Please provide information on whether there was at least one minor among the victims of the diagnosed person.")

    # Siódma cecha - pełnoletni
    pelnoletni = st.selectbox(
        "At least one adult victim:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(pelnoletni)
    st.caption("Please provide information on whether there was at least one adult among the victims of the diagnosed person.")

    # Ósma cecha - małoletni (płeć)
    maloletni_plec = st.selectbox(
        "The gender of minor victims:",
        options=[1, 2, 3],
        format_func=lambda x: {
            1: "Girls",
            2: "Boys",
            3: "Girls and Boys"
        }.get(x, "Unknown")
    )
    user_input.append(maloletni_plec)
    st.caption("Please provide information about the gender of the victims of the individual being assessed: whether there was at least one girl, at least one boy, or at least one girl and one boy.")

    # Dziewiąta cecha - czy żył z partnerem 2 lata
    zycie_z_partnerem = st.selectbox(
        "Ever Lived with a lover for at least two years?",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(zycie_z_partnerem)
    st.caption("Please provide information on whether the individual being assessed has been in a close relationship with a partner for at least two years.")
    st.info("The information must come from official clinical documentation, including the STATIC-99R assessment and a sexological diagnosis.")


    # Dziesiąta cecha - nieseksualne przestępstwo odniesienia z agresją
    nieseksualne_agresja = st.selectbox(
        "Index non-sexual violence - any convictions:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(nieseksualne_agresja)
    st.caption("Specify if there are any recorded convictions related to non-sexual violence for the individual being assessed.")
    st.info("The information must come from official clinical documentation, including the STATIC-99R assessment and a sexological diagnosis.")

    # Jedenasta cecha - wcześniejsze nieseksualne przestępstwa z przemocą
    wcześniejsze_przemoc = st.selectbox(
        "Prior non-sexual violence - any convictions:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(wcześniejsze_przemoc)
    st.caption("Indicate whether the individual being assessed has any previous convictions related to non-sexual violence.")
    st.info("The information must come from official clinical documentation, including the STATIC-99R assessment and a sexological diagnosis.")

    # Dwunasta cecha - łączna ilość wyroków
    wyroki = st.selectbox(
        "Prior sentencing dates (excluding index):",
        options=[1, 2],
        format_func=lambda x: {1: "3 or less", 2: "4 or more"}.get(x, "Unknown")
    )
    user_input.append(wyroki)
    st.caption("Specify the dates of any prior sentencing for the individual being assessed, excluding the index offense.")
    st.info("The information must come from official clinical documentation, including the STATIC-99R assessment and a sexological diagnosis.")

    # Trzynasta cecha - jakiekolwiek skazania za niekontaktowe
    skazania_niekontaktowe = st.selectbox(
        "Any convictions for non-contact sex offenses:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(skazania_niekontaktowe)
    st.caption("Indicate whether the individual being assessed has any convictions for non-contact sex offenses.")
    st.info("The information must come from official clinical documentation, including the STATIC-99R assessment and a sexological diagnosis.")

    # Czternasta cecha - jakiekolwiek ofiary płci męskiej
    ofiary_meska = st.selectbox(
        "Any male victims:",
        options=[1, 2],
        format_func=lambda x: {1: "Yes", 2: "No"}.get(x, "Unknown")
    )
    user_input.append(ofiary_meska)
    st.caption("Indicate whether the individual being assessed has had any male victims.")
    st.info("The information must come from official clinical documentation, including the STATIC-99R assessment and a sexological diagnosis.")

    # Piętnasta cecha - o4
    o4 = st.slider(
        "NEO-PI-R O4 (stens):",
        min_value=1,
        max_value=10,
        value=5
    )
    user_input.append(o4)
    st.caption("The O4 facet of the NEO-PI-R (Neuroticism-Extraversion-Openness Personality Inventory-Revised) relates to the openness to actions.")
    st.info("The information must come from official clinical documentation, including a psychological diagnosis.")

    # Szesnasta cecha - neurotyczność - steny
    neurotycznosc = st.slider(
        "NEO-PI-R Neuroticism (stens):",
        min_value=1,
        max_value=10,
        value=5
    )
    user_input.append(neurotycznosc)
    st.caption("Please provide information on the NEO-PI-R Neuroticism score.")
    st.info("The information must come from official clinical documentation, including a psychological diagnosis.")

    # Siedemnasta cecha - TRE - steny
    tre = st.slider(
        "TRE (stens):",
        min_value=1,
        max_value=10,
        value=5
    )
    user_input.append(tre)
    st.caption("Please provide information on the TRE score.")
    st.info("The information must come from official clinical documentation, including a psychological diagnosis.")

    # Osiemnasta cecha - expressions.mean_solutionTIme
    mean_solution_time = st.number_input(
        "ToL Expressions.mean_solutionTime:",
        min_value=0,
        max_value=90000,
        value=0,
        step=1)
    user_input.append(mean_solution_time)
    st.caption("Please provide the value of Expressions.mean_solutionTime from the standardized Inquisit Lab script for the Tower of London task.")
    st.info("The information must come from official clinical documentation, including a psychological diagnosis.")

    # Dziewiętnasta cecha - values.colortialcount
    colortialcount = st.slider(
        "WCST values.colortialcount:",
        min_value=10,
        max_value=128,
        value=10
    )
    user_input.append(colortialcount)
    st.caption("Please provide the value of values.colortrialcount from the standardized Inquisit Lab script for the Wisconsin Card Sorting Test (WCST).")
    st.info("The information must come from official clinical documentation, including a psychological diagnosis.")

    # Dwudziesta cecha - values.trialscompletefirstcategory
    trialscompletefirstcategory = st.slider(
        "WCST values.trialscompletefirstcategory:",
        min_value=10,
        max_value=128,
        value=10
    )
    user_input.append(trialscompletefirstcategory)
    st.caption("Please provide the value of values.trialscompletefirstcategory from the standardized Inquisit Lab script for the Wisconsin Card Sorting Test (WCST).")
    st.info("The information must come from official clinical documentation, including a psychological diagnosis.")

# Predykcja
    if st.button("Predict"):
        prediction = model.predict([user_input])[0]
        probabilities = model.predict_proba([user_input])[0]

        if prediction == 1:
            st.write("**Prediction:** The occurrence of paraphilic disorders is likely. Prioritize this individual for assessment.")
        elif prediction == 2:
            st.write("**Prediction:** The occurrence of paraphilic disorders is less likely. Assess this individual at a later stage.")
        
        st.warning("Reminder: The result should be regarded as purely indicative and cannot substitute for a professional analysis. It is essential to interpret the outcome within the context of a comprehensive evaluation conducted by qualified specialists. The tool is intended to provide preliminary insights and should not be used for definitive conclusions or diagnostic purposes.")
